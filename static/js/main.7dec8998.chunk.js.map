{"version":3,"sources":["interfaces/initialStates.ts","redux/slices/requestSlice.ts","redux/slices/notification.ts","redux/reducers/index.ts","redux/store.ts","reportWebVitals.ts","components/Seo/Seo.tsx","pages/Error/Error.tsx","components/Shared/ErrorBoundary.tsx","routes/ScrollToTop.tsx","assets/logo.svg","components/Layout/Layout.tsx","components/Layout/index.tsx","pages/Home/Home.tsx","pages/Home/index.tsx","pages/Game/Game.tsx","pages/Game/index.tsx","pages/Start/Start.tsx","pages/Start/index.tsx","pages/Rules/rules.md","pages/Rules/Rules.tsx","pages/Rules/index.tsx","serviceWorker.ts","routes/Routes.tsx","index.tsx","pages/Home/Home.module.scss"],"names":["initialNotificationState","alertType","message","initialFetchState","loading","success","request","response","error","initialState","notification","apiRequest","createSlice","name","reducers","apiRequestLoading","state","action","payload","key","apiRequestSuccess","apiRequestFailure","apiRequestReset","apiRequestResetAll","apiRequestUpdateResponse","apiRequestReplaceResponse","actions","show","clear","rootReducer","combineReducers","persistConfig","storage","history","createBrowserHistory","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","logger","devTools","process","preloadedState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Seo","title","description","className","Helmet","titleTemplate","defaultTitle","charSet","content","rel","href","ErrorPage","color","onClick","push","ErrorBoundary","props","hasError","info","this","setState","Error","children","React","Component","ScrollToTop","pathname","useLocation","isDrawerRoute","useRouteMatch","isModalRoute","isTableRoute","useEffect","window","scrollTo","top","left","behavior","Layout","component","to","src","logo","alt","connector","connect","Home","style","Game","Start","playerArr","Array","fill","map","_","i","useForm","register","handleSubmit","errors","onSubmit","data","console","log","height","ref","required","value","item","numberOfPlayers","type","Rules","useState","markdown","setMarkDown","a","fetch","rules","res","text","final","getFile","plugins","gfm","isLocalhost","Boolean","location","hostname","match","config","navigator","URL","origin","addEventListener","swUrl","headers","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","RefreshToast","closeToast","Routes","newVersionAvailable","setNewVersionAvailable","postMessage","waitingWorker","setWaitingWorker","onServiceWorkerUpdate","waiting","updateServiceWorker","toast","toastProps","position","POSITION","BOTTOM_RIGHT","autoClose","dismiss","basename","exact","path","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7dec8998.chunk.js","sourcesContent":["import { AppState, FetchState, KeyFetchState, NotificationState } from \".\";\n\nexport const initialNotificationState: NotificationState = {\n  alertType: 'info',\n  message: \"\",\n};\n\nexport const initialFetchState: FetchState = {\n  loading: false,\n  success: false,\n  request: null,\n  response: null,\n  error: null,\n};\n\nexport const initialState: AppState = {\n  notification: initialNotificationState,\n  apiRequest: {} as KeyFetchState,\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { KeyFetchAction, KeyFetchState } from \"../../interfaces\";\nimport { initialFetchState } from \"../../interfaces/initialStates\";\n\nconst apiRequest = createSlice({\n  name: \"apiRequest\",\n  initialState: {} as KeyFetchState,\n  reducers: {\n    apiRequestLoading(state, action: PayloadAction<KeyFetchAction>) {\n      state[action.payload.key] = {\n        ...state[action.payload.key],\n        loading: true,\n        request: action.payload.request || null,\n      };\n    },\n    apiRequestSuccess(state, action: PayloadAction<KeyFetchAction>) {\n      state[action.payload.key] = {\n        ...state[action.payload.key],\n        loading: false,\n        success: true,\n        response: action.payload.response,\n        error: null,\n      };\n    },\n    apiRequestFailure(state, action: PayloadAction<KeyFetchAction>) {\n      state[action.payload.key] = {\n        ...state[action.payload.key],\n        loading: false,\n        success: false,\n        error: action.payload.error || null,\n      };\n    },\n    apiRequestReset(state, action: PayloadAction<KeyFetchAction>) {\n      state[action.payload.key] = {\n        ...state[action.payload.key],\n        ...initialFetchState,\n      };\n    },\n    apiRequestResetAll(state, action: PayloadAction<KeyFetchAction>) {\n      state = {} as KeyFetchState;\n    },\n    apiRequestUpdateResponse(state, action: PayloadAction<KeyFetchAction>) {\n      state[action.payload.key] = {\n        ...state[action.payload.key],\n        loading: false,\n        success: true,\n        response: {\n          ...state[action.payload.key]?.response,\n          ...action.payload.response,\n        },\n      };\n    },\n    apiRequestReplaceResponse(state, action: PayloadAction<KeyFetchAction>) {\n      state[action.payload.key] = {\n        ...state[action.payload.key],\n        loading: false,\n        success: true,\n        response: action.payload.response,\n        error: null,\n      };\n    },\n  },\n});\n\nexport const { \n  apiRequestFailure, \n  apiRequestLoading, \n  apiRequestReplaceResponse, \n  apiRequestReset, \n  apiRequestResetAll, \n  apiRequestSuccess, \n  apiRequestUpdateResponse \n} = apiRequest.actions;\n\nexport default apiRequest.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { NotificationActionProps } from \"../../interfaces\";\nimport { initialNotificationState } from \"../../interfaces/initialStates\";\n\nconst notification = createSlice({\n  name: \"notification\",\n  initialState: initialNotificationState,\n  reducers: {\n    show(state, action: PayloadAction<NotificationActionProps>) {\n      state.alertType = action.payload.alertType;\n      state.message = action.payload.message\n    },\n    clear(state, action: PayloadAction<NotificationActionProps>) {\n      \n    },\n  },\n});\n\nexport const { show, clear } = notification.actions;\n\nexport default notification.reducer;\n","import { combineReducers } from 'redux'\nimport apiRequest from '../slices/requestSlice';\nimport notification from '../slices/notification';\n\nconst rootReducer = combineReducers({\n    notification,\n    apiRequest\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default rootReducer;","import { configureStore, Action } from \"@reduxjs/toolkit\";\nimport { createBrowserHistory } from \"history\";\nimport logger from \"redux-logger\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { ThunkAction } from \"redux-thunk\";\n\nimport { initialState } from \"../interfaces/initialStates\";\n\nimport rootReducer, { RootState } from \"./reducers\";\n\nconst persistConfig = {\n  key: \"retailr-xceltopdf\",\n  storage,\n};\n\nexport const history = createBrowserHistory();\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n  devTools: process.env.NODE_ENV !== \"production\",\n  preloadedState: initialState,\n});\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>;\n\nexport default store;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\ninterface Props {\n  title: string;\n  description: string;\n}\n\nconst Seo = ({ title, description }: Props) => {\n  return (\n    <div className=\"application\">\n      <Helmet titleTemplate=\"%s | Cardz\" defaultTitle=\"Cardz\">\n        <meta charSet=\"utf-8\" />\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />\n        <link rel=\"canonical\" href=\"http://mysite.com/example\" />\n      </Helmet>\n    </div>\n  );\n};\n\nexport default Seo;\n","import React from \"react\";\nimport Seo from \"../../components/Seo/Seo\";\nimport { history } from \"../../redux/store\";\n\ninterface ErrorPageProps {\n  error: string;\n  description: string;\n}\n\nconst ErrorPage: React.FC<ErrorPageProps> = ({ error, description }) => {\n  return (\n    <div className=\"container mx-auto h-screen\">\n      <Seo title={error} description={description} />\n      <div className=\"flex w-full flex-col h-screen justify-center items-center\">\n        <h2 title={error} className=\"font-semibold text-8xl\">\n          {error}\n        </h2>\n        <p color=\"textSecondary\">{description}</p>\n        <button\n          className=\"mt-10 bg-primary text-white p-2 rounded\"\n          onClick={() => history.push(\"/\")}\n        >\n          Back to Overview\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import React from \"react\";\nimport ErrorPage from \"../../pages/Error/Error\";\n\ninterface ErrorBoundaryProps {\n  hasError: boolean;\n}\nexport default class ErrorBoundary extends React.Component<\n  {},\n  ErrorBoundaryProps\n> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error: any, info: any) {\n    // eslint-disable-next-line no-console\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <ErrorPage\n          error=\"Oops!\"\n          description=\"Something went wrong. Please contact you administrator\"\n        />\n      );\n    }\n    return this.props.children;\n  }\n}\n","import { useEffect } from \"react\";\nimport { useLocation, useRouteMatch } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n  const isDrawerRoute = useRouteMatch(\"/offers/:status/:userId/:offerId/file\");\n  const isModalRoute = useRouteMatch(\"/offers/:status/:userId/:offerId/file\");\n  const isTableRoute = useRouteMatch(\"/offers/:status\");\n\n  useEffect(() => {\n    if (!(isDrawerRoute || isTableRoute || isModalRoute)) {\n      window.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: \"smooth\",\n      });\n    }\n  }, [isDrawerRoute, isModalRoute, isTableRoute, pathname]);\n\n  return null;\n}\n","export default __webpack_public_path__ + \"static/media/logo.13af2aec.svg\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport logo from \"../../assets/logo.svg\";\n\ninterface Props {\n  component: React.ReactNode;\n}\n\nconst Layout = ({ component }: Props) => {\n  return (\n    <div className=\"font-serif w-full\">\n      <div className=\"flex container mx-auto justify-between\">\n        <div>\n          <NavLink to=\"/\">\n            <img src={logo} alt=\"Cardz logo\" className=\"h-20\" />\n          </NavLink>\n        </div>\n        <div className=\"flex items-center space-x-4\">\n          <NavLink\n            to=\"/game/34343\"\n            className=\"btn btn-secondary hover:opacity-80\"\n          >\n            Continue Game\n          </NavLink>\n          <NavLink\n            to=\"/new-game\"\n            className=\"btn btn-secondary hover:opacity-80\"\n          >\n            New Game\n          </NavLink>\n          <NavLink to=\"/rules\" className=\"btn btn-primary hover:opacity-80\">\n            Rules\n          </NavLink>\n        </div>\n      </div>\n      <main className=\"w-full\">\n        <section>{component}</section>\n      </main>\n    </div>\n  );\n};\n\nexport default Layout;\n","import { connect, ConnectedProps } from 'react-redux';\nimport { AppState } from '../../interfaces';\nimport Layout from './Layout';\n\nconst mapState = (state: AppState) => ({\n});\n\nconst mapDispatch = {};\n\nconst connector = connect(mapState, mapDispatch);\n\nexport type PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(Layout);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../../assets/logo.svg\";\nimport style from \"./Home.module.scss\";\n\ninterface Props {}\n\nconst Home = (props: Props) => {\n  return (\n    <div className=\"container flex flex-col justify-center items-center mx-auto h-screen\">\n      <div className=\"w-full text-center\">\n        <img src={logo} className=\"inline-block w-96\" alt=\"cardz logo\" />\n      </div>\n      <div className=\"w-full flex flex-col my-8 items-center justify-center \">\n        <Link\n          className={`mb-12 btn btn-secondary ${style[\"homebtn-secondary\"]}`}\n          to=\"/game/2322\"\n        >\n          Continue Game\n        </Link>\n        <Link\n          className={`mb-12 btn btn-secondary ${style[\"homebtn-secondary\"]}`}\n          to=\"/new-game\"\n        >\n          New Game\n        </Link>\n        <Link\n          className={`mb-12 btn btn-primary ${style[\"homebtn-primary\"]}`}\n          to=\"/rules\"\n        >\n          Rules\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { connect, ConnectedProps } from \"react-redux\";\nimport { AppState } from \"../../interfaces\";\nimport Home from \"./Home\";\n\nconst mapState = (state: AppState) => ({});\n\nconst mapDispatch = {};\n\nconst connector = connect(mapState, mapDispatch);\n\nexport type PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(Home);\n","import React from \"react\";\n\ninterface Props {}\n\nconst Game = (props: Props) => {\n  return <div>Game</div>;\n};\n\nexport default Game;\n","import { connect, ConnectedProps } from \"react-redux\";\nimport { AppState } from \"../../interfaces\";\nimport Game from \"./Game\";\n\nconst mapState = (state: AppState) => ({});\n\nconst mapDispatch = {};\n\nconst connector = connect(mapState, mapDispatch);\n\nexport type PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(Game);\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Datum } from \"../../interfaces\";\n\ninterface Props {}\n\nconst Start = (props: Props) => {\n  const playerArr = Array(4)\n    .fill(null)\n    .map((_, i) => i + 1);\n  const { register, handleSubmit, errors } = useForm();\n  const onSubmit = (data: Datum) => console.log(data);\n\n  return (\n    <form\n      onSubmit={handleSubmit(onSubmit)}\n      style={{ height: \"50vh\" }}\n      className=\"container justify-center flex flex-col items-center mx-auto my-16\"\n    >\n      <select\n        name=\"numberOfPlayers\"\n        ref={register({ required: true })}\n        className=\"bg-white w-96 rounded px-2 shadow-sm text-gray-700 py-4\"\n      >\n        <option value=\"\">Select number of players</option>\n        {playerArr.map((item) => (\n          <option value={item}>\n            {item} Player{item > 1 && \"s\"}{\" \"}\n          </option>\n        ))}\n      </select>\n      {errors.numberOfPlayers && (\n        <span className=\"text-xs my-3 text-white\">\n          Select number of players\n        </span>\n      )}\n      <button type=\"submit\" className={`my-8 w-96 p-4 btn btn-secondary`}>\n        Start Game\n      </button>\n    </form>\n  );\n};\n\nexport default Start;\n","import { connect, ConnectedProps } from \"react-redux\";\nimport { AppState } from \"../../interfaces\";\nimport Start from \"./Start\";\n\nconst mapState = (state: AppState) => ({});\n\nconst mapDispatch = {};\n\nconst connector = connect(mapState, mapDispatch);\n\nexport type PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(Start);\n","export default __webpack_public_path__ + \"static/media/rules.0a67b404.md\";","import React, { useEffect, useState } from \"react\";\nimport Seo from \"../../components/Seo/Seo\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\nimport rules from \"./rules.md\";\nimport style from \"./Rules.module.scss\";\n\ninterface Props {}\n\nconst Rules = (props: Props) => {\n  const [markdown, setMarkDown] = useState<string>(\"\");\n  console.log(style);\n\n  useEffect(() => {\n    const getFile = async () => {\n      const res = await fetch(rules);\n      const final = await res.text();\n      setMarkDown(final);\n    };\n    getFile();\n  }, []);\n\n  return (\n    <div>\n      <Seo title=\"Rules\" description=\"Game Rules\" />\n      <div className=\"container mx-auto\">\n        <div className=\"w-full bg-white p-8 my-16 rounded text-gray-700\">\n          <ReactMarkdown plugins={[gfm]} children={markdown}></ReactMarkdown>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Rules;\n","import { connect, ConnectedProps } from \"react-redux\";\nimport { AppState } from \"../../interfaces\";\nimport Rules from \"./Rules\";\n\nconst mapState = (state: AppState) => ({});\n\nconst mapDispatch = {};\n\nconst connector = connect(mapState, mapDispatch);\n\nexport type PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(Rules);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ToastContainer, toast, ToastContentProps } from \"react-toastify\";\n\nimport ScrollToTop from \"./ScrollToTop\";\nimport { PropsFromRedux } from \".\";\nimport Layout from \"../components/Layout\";\nimport ErrorPage from \"../pages/Error/Error\";\nimport Home from \"../pages/Home\";\nimport Game from \"../pages/Game\";\nimport Start from \"../pages/Start\";\nimport Rules from \"../pages/Rules\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport * as serviceWorker from \"../serviceWorker\";\n\ninterface RefrestToastProps extends ToastContentProps {\n  action: () => void;\n}\n\nconst RefreshToast = ({ closeToast, action }: RefrestToastProps) => {\n  const close = () => {\n    action();\n    closeToast && closeToast();\n  };\n  return (\n    <div>\n      New updates available\n      <button onClick={close}>Reload</button>\n    </div>\n  );\n};\n\nconst Routes: React.FC<PropsFromRedux> = () => {\n  const [newVersionAvailable, setNewVersionAvailable] = useState(false);\n  const [waitingWorker, setWaitingWorker] = useState<any>({\n    postMessage: (message: any) => message,\n  });\n\n  const onServiceWorkerUpdate = (registration: ServiceWorkerRegistration) => {\n    setWaitingWorker(registration?.waiting);\n    if (registration) setNewVersionAvailable(true);\n  };\n\n  useEffect(() => {\n    if (process.env.NODE_ENV === \"production\") {\n      serviceWorker.register({ onUpdate: onServiceWorkerUpdate });\n    }\n  }, []);\n\n  useEffect(() => {\n    const updateServiceWorker = () => {\n      waitingWorker && waitingWorker.postMessage({ type: \"SKIP_WAITING\" });\n      setNewVersionAvailable(false);\n      window.location.reload();\n    };\n\n    const notify = () =>\n      toast(\n        ({ closeToast, toastProps }: RefrestToastProps) => (\n          <RefreshToast\n            closeToast={closeToast}\n            toastProps={toastProps}\n            action={updateServiceWorker}\n          />\n        ),\n        {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: false,\n        }\n      );\n    if (newVersionAvailable) {\n      notify();\n    }\n    return () => {\n      toast.dismiss();\n    };\n  }, [newVersionAvailable, waitingWorker]);\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <ToastContainer />\n      <ScrollToTop />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/rules\">\n          <Layout component={<Rules />} />\n        </Route>\n        <Route path=\"/new-game\">\n          <Layout component={<Start />} />\n        </Route>\n        <Route path=\"/game/:gameId\">\n          <Layout component={<Game />} />\n        </Route>\n        <Route>\n          <Layout\n            component={\n              <ErrorPage\n                error=\"404\"\n                description=\"The page you are looking for does not exist\"\n              />\n            }\n          />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persistStore } from \"redux-persist\";\nimport store from \"./redux/store\";\nimport \"./index.scss\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ErrorBoundary from \"./components/Shared/ErrorBoundary\";\nimport Routes from \"./routes/Routes\";\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ErrorBoundary>\n          <Routes />\n        </ErrorBoundary>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homebtn-secondary\":\"Home_homebtn-secondary__1LzFL\",\"homebtn-primary\":\"Home_homebtn-primary__2Syum\"};"],"sourceRoot":""}